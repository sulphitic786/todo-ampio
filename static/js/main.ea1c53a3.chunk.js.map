{"version":3,"sources":["components/TodoList.jsx","components/Todo.jsx","App.jsx","index.js"],"names":["TodoList","props","_props$item","_props$item2","_props$item3","_props$item4","_props$item5","_props$item6","anchorEl","setAnchorEl","React","useState","open","Boolean","_jsx","ListItem","disabled","item","status","sx","boxShadow","margin","width","borderRadius","bgcolor","display","justifyContent","children","_jsxs","disablePadding","ListItemButton","ListItemIcon","RadioButtonUncheckedIcon","color","CheckCircleIcon","CancelOutlinedIcon","Box","Typography","variant","title","style","fontSize","updatedTime","_Fragment","IconButton","id","undefined","onClick","event","currentTarget","MoreVertIcon","Menu","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","e","handleEdit","handleComplete","handleDelete","Todo","inputList","setInputList","action","setAction","editData","setEditData","items","setItems","Swal","require","useEffect","savedItems","localStorage","getItem","JSON","parse","todoListData","todoList","setItem","stringify","formatDate","date","Date","toLocaleString","hour12","newItem","active","createdTime","fire","icon","showCancelButton","confirmButtonText","then","result","isConfirmed","oldItems","map","i","Container","maxWidth","textAlign","marginTop","Card","CardContent","component","gutterBottom","alignItems","marginBottom","TextField","size","value","placeholder","onChange","target","marginRight","handleAddItem","getTime","AddIcon","List","maxHeight","overflowX","itemval","index","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea1c53a3.chunk.js","sourcesContent":["import React from \"react\";\nimport todoList from '../JsonFiles/todoList.json'\nimport { ListItem, ListItemText, IconButton, Button, Menu, MenuItem, Box, Typography  } from \"@mui/material\";\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelOutlinedIcon from '@mui/icons-material/CancelOutlined';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\n\nconst TodoList = (props) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <ListItem\n    disabled={props?.item?.status == \"deleted\" ? true : false}\n      sx={{\n        boxShadow: 1,\n        margin: 1,\n        width: \"97%\",\n        borderRadius: 1,\n        bgcolor: \"background.paper\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <ListItem disablePadding>\n        <ListItemButton>\n          <ListItemIcon>\n            {props?.item?.status ==\"inprogress\"?\n            <RadioButtonUncheckedIcon color='info' />\n            :props?.item?.status == \"completed\"?\n            <CheckCircleIcon color='success' />\n            :<CancelOutlinedIcon color='error' />\n            }\n          </ListItemIcon>\n          <Box>\n          <Typography variant=\"body1\">{props?.item?.title}</Typography>\n          <Typography variant=\"body2\" style={{ fontSize: '9px', color: 'secondary' }}>\n            {props?.item?.updatedTime}\n          </Typography>\n        </Box>\n        </ListItemButton>\n        {props?.item?.status ==\"inprogress\"?\n        <>\n        <IconButton\n        id=\"demo-positioned-button\"\n        aria-controls={open ? 'demo-positioned-menu' : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? 'true' : undefined}\n        onClick={handleClick}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id=\"demo-positioned-menu\"\n        aria-labelledby=\"demo-positioned-button\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        <MenuItem onClick={(e)=>props.handleEdit(props?.item)}>Edit</MenuItem>\n        <MenuItem onClick={(e)=>props.handleComplete(props?.item)}>Complete</MenuItem>\n        <MenuItem onClick={(e)=>props.handleDelete(props?.item)}>Delete</MenuItem>\n      </Menu>\n      </>\n      :''}\n      </ListItem>\n    </ListItem>\n  );\n};\n\nexport default TodoList;\n","import React, { useState, useEffect  } from 'react';\nimport TodoList from './TodoList';\nimport { Container, Box, Card, CardContent, Typography, TextField, IconButton, List, Icon } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport todoListData from '../JsonFiles/todoList.json'\nimport Swal from 'sweetalert2'\n\nconst Todo = () => {\n  const [inputList, setInputList] = useState(\"\");\n  const [action, setAction] = useState(\"add\");\n  const [editData, setEditData] = useState(null);\n  const [items, setItems] = useState([]);\n  const Swal = require('sweetalert2')\n  \n  useEffect(() => {\n    const savedItems = localStorage.getItem('todoList');\n    if (savedItems) {\n      setItems(JSON.parse(savedItems));\n    } else {\n      setItems(todoListData?.todoList);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('todoList', JSON.stringify(items));\n  }, [items]);\n\nconst formatDate = (date) => new Date(date).toLocaleString('en-GB', { hour12: false });\n\n  const itemEvent = (event) => {\n    setInputList(event.target.value);\n  };\n\n  const handleAddItem = () => {\n    if(inputList){\n    let newItem ={\n\t\t\t\"id\": action == \"update\" ? editData?.id : new Date().getTime(),\n\t\t\t\"title\": inputList,\n\t\t\t\"active\": true,\n\t\t\t\"status\": \"inprogress\",\n\t\t\t\"updatedTime\": formatDate(new Date()),\n\t\t\t\"createdTime\": action == \"update\" ? editData?.createdTime : formatDate(new Date())\n\t\t}\n    action == \"update\" ?\n    setItems((oldItems) => \n      oldItems.map((i) => \n        i.id === editData.id ? newItem : i\n      )\n    )\n    :\n    setItems((oldItems) => {\n      return [...oldItems, newItem];\n    });\n    Swal.fire(action == \"update\" ? \"Todo update successfully!\" : \"Todo added successfully\", \"\", \"success\");\n    setInputList('');\n    setAction('');\n    setEditData(null)\n  } else{\n    Swal.fire(\"Please add todo's title!\", \"\", \"warning\");\n  }\n  };\n\n  const handleEdit = (item) => {\n    setAction('update')\n    setInputList(item.title)\n    setEditData(item)\n  };\n\n  const handleComplete = (item) => {\n    const newItem = {\n      id: item.id,\n      title: item.title,\n      active: item.active,\n      status: \"completed\",\n      updatedTime: formatDate(new Date()),\n      createdTime: item.createdTime\n    };\n\n    Swal.fire({\n      title: \"Do you want to complete the todo?\",\n      icon: \"info\",\n      showCancelButton: true,\n      confirmButtonText: \"Save\",\n    }).then((result) => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        setItems((oldItems) => \n          oldItems.map((i) => \n            i.id === item.id ? newItem : i\n          )\n        );\n        Swal.fire(\"Completed!\", \"\", \"success\");\n      }\n    });\n  };\n\n  const handleDelete = (item) => {\n    const newItem = {\n      id: item.id,\n      title: item.title,\n      active: item.active,\n      status: \"deleted\",\n      updatedTime: formatDate(new Date()),\n      createdTime: item.createdTime\n    };\n\n    Swal.fire({\n      title: \"Do you want to delete the todo?\",\n      icon: \"info\",\n      showCancelButton: true,\n      confirmButtonText: \"Save\",\n    }).then((result) => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        setItems((oldItems) => \n          oldItems.map((i) => \n            i.id === item.id ? newItem : i\n          )\n        );\n        Swal.fire(\"Deleted!\", \"\", \"success\");\n      }\n    });\n  };\n  \n\n  return (\n    <Container maxWidth=\"sm\" sx={{ textAlign: 'center', marginTop: 5 }}>\n      <Card variant=\"outlined\" sx={{ boxShadow: 3 }}>\n        <CardContent>\n          <Typography variant=\"h5\" component=\"div\" gutterBottom>\n            Todo List\n          </Typography>\n          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginBottom: 3 }}>\n            <TextField\n              variant=\"outlined\"\n              size=\"small\"\n              value={inputList}\n              placeholder=\"Add Items\"\n              onChange={itemEvent}\n              sx={{ marginRight: 1 }}\n            />\n            <IconButton color=\"primary\" onClick={handleAddItem}>\n              <AddIcon />\n            </IconButton>\n          </Box>\n          <List sx={{maxHeight: '65vh', overflowX: 'hidden'}}>\n            {items?.map((itemval, index) => (\n              <TodoList\n                item={itemval}\n                key={index}\n                id={index}\n                handleEdit={handleEdit}\n                handleComplete={handleComplete}\n                handleDelete={handleDelete}\n              />\n            ))}\n          </List>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n};\n\nexport default Todo;\n","// import { Home } from '@material-ui/icons';\nimport React, { useEffect, useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n//--------------- Todo List -------------\nimport Todo from './components/Todo'\n\n\nconst App = () => {\n  return (\n    <>\n      <Todo />\n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <>\n     <App />\n    </>\n    \n,document.getElementById('root') \n);\n\n    "],"sourceRoot":""}